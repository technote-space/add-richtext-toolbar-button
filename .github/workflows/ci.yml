on: push

name: CI

env:
  TRAVIS_BUILD_DIR: ${{ github.workspace }}

jobs:
  eslint:
    name: ESLint
    runs-on: ubuntu-latest
    timeout-minutes: 5
    env:
      LINT: 1
    steps:
      - uses: technote-space/auto-cancel-redundant-job@v1
        with:
          EXCLUDE_MERGED: 'true'
      - name: Set running flag
        run: echo "::set-env name=RUNNING::1"
      - uses: actions/checkout@v2
      - uses: technote-space/get-git-comment-action@v1
      - uses: technote-space/get-diff-action@v2
        with:
          PREFIX_FILTER: assets/js/
          SUFFIX_FILTER: |
            .js
            .ts
          FILES: .eslintrc
        if: "! contains(env.COMMIT_MESSAGE, '[skip ci]') && ! contains(env.COMMIT_MESSAGE, '[ci skip]')"
      - name: Set running flag
        run: echo "::set-env name=RUNNING::"
        if: "! env.GIT_DIFF"

      - name: Get Yarn Cache Directory
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"
        if: env.RUNNING
      - name: Cache node dependencies
        uses: actions/cache@v1
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
        if: env.RUNNING
      - name: Prepare setting
        run: git clone --depth=1 https://github.com/wp-content-framework/travis-ci.git travis-ci && bash travis-ci/bin/prepare.sh
        if: env.RUNNING
      - name: Check code style
        run: bash travis-ci/bin/js/js-lint.sh
        if: env.RUNNING

  phpcs:
    name: PHP Code Sniffer
    runs-on: ubuntu-latest
    timeout-minutes: 5
    env:
      LINT: 1
    steps:
      - name: Set running flag
        run: echo "::set-env name=RUNNING::1"
      - uses: actions/checkout@v2
      - uses: technote-space/get-git-comment-action@v1
      - uses: technote-space/get-diff-action@v2
        with:
          PREFIX_FILTER: |
            configs/
            src/
            tests/
          SUFFIX_FILTER: .php
        if: "! contains(env.COMMIT_MESSAGE, '[skip ci]') && ! contains(env.COMMIT_MESSAGE, '[ci skip]')"
      - name: Set running flag
        run: echo "::set-env name=RUNNING::"
        if: "! env.GIT_DIFF"

      - name: Get Composer Cache Directory
        id: composer-cache
        run: |
          echo "::set-output name=dir::$(composer config cache-files-dir)"
        if: env.RUNNING
      - uses: actions/cache@v1
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-
        if: env.RUNNING
      - name: Prepare setting
        run: git clone --depth=1 https://github.com/wp-content-framework/travis-ci.git travis-ci && bash travis-ci/bin/prepare.sh
        if: env.RUNNING
      - name: Check code style
        run: bash travis-ci/bin/php/phpcs.sh
        if: env.RUNNING

  phpmd:
    name: PHPMD
    runs-on: ubuntu-latest
    timeout-minutes: 5
    env:
      LINT: 1
    steps:
      - name: Set running flag
        run: echo "::set-env name=RUNNING::1"
      - uses: actions/checkout@v2
      - uses: technote-space/get-git-comment-action@v1
      - uses: technote-space/get-diff-action@v2
        with:
          PREFIX_FILTER: |
            configs/
            src/
            tests/
          SUFFIX_FILTER: .php
          SEPARATOR: ','
        if: "! contains(env.COMMIT_MESSAGE, '[skip ci]') && ! contains(env.COMMIT_MESSAGE, '[ci skip]')"
      - name: Set running flag
        run: echo "::set-env name=RUNNING::"
        if: "! env.GIT_DIFF"

      - name: Get Composer Cache Directory
        id: composer-cache
        run: |
          echo "::set-output name=dir::$(composer config cache-files-dir)"
        if: env.RUNNING
      - uses: actions/cache@v1
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-
        if: env.RUNNING
      - name: Prepare setting
        run: git clone --depth=1 https://github.com/wp-content-framework/travis-ci.git travis-ci && bash travis-ci/bin/prepare.sh
        if: env.RUNNING
      - name: Check code style
        run: bash travis-ci/bin/php/phpmd.sh
        if: env.RUNNING

  cover:
    name: Coverage
    needs: eslint
    runs-on: ubuntu-latest
    timeout-minutes: 10
    strategy:
      matrix:
        node: ['12', '14']
    steps:
      - name: Set running flag
        run: echo "::set-env name=RUNNING::1"
      - uses: actions/checkout@v2
      - uses: technote-space/get-git-comment-action@v1
      - uses: technote-space/get-diff-action@v2
        with:
          PREFIX_FILTER: assets/js/
          SUFFIX_FILTER: |
            .js
            .ts
            .snap
          FILES: |
            yarn.lock
            jest.config.js
        if: "! contains(env.COMMIT_MESSAGE, '[skip ci]') && ! contains(env.COMMIT_MESSAGE, '[ci skip]')"
      - name: Set running flag
        run: echo "::set-env name=RUNNING::"
        if: "! env.GIT_DIFF"
      - name: Set running flag
        if: "matrix.node == '12' && ! startsWith(github.ref, 'refs/tags/') && github.event.base_ref == format('refs/heads/{0}', github.event.repository.default_branch)"
        run: echo "::set-env name=RUNNING::1"
      - name: Set running flag
        if: matrix.node == '12' && startsWith(github.ref, 'refs/tags/v')
        run: echo "::set-env name=RUNNING::1"
      - name: Set running flag
        run: |
          if [[ ! -f assets/js/package.json ]] || ! < assets/js/package.json jq -r '.scripts | keys[]' | grep -qe '^cover$'; then
            echo "::set-env name=RUNNING::"
          fi

      - name: Setup node
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node }}
        if: env.RUNNING
      - name: Get Yarn Cache Directory
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"
        if: env.RUNNING
      - name: Cache node dependencies
        uses: actions/cache@v1
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
        if: env.RUNNING
      - name: Prepare setting
        run: git clone --depth=1 https://github.com/wp-content-framework/travis-ci.git travis-ci && bash travis-ci/bin/prepare.sh
        if: env.RUNNING
      - name: Run tests
        run: bash travis-ci/bin/js/js-test.sh
        if: env.RUNNING
      - name: Codecov
        run: |
          if [ -n "$CODECOV_TOKEN" ]; then
            curl -s https://codecov.io/bash | bash -s -- -t $CODECOV_TOKEN -f $COVERAGE_FILE
          fi
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
          COVERAGE_FILE: ./assets/js/coverage/lcov.info
        if: env.RUNNING && matrix.node == '12'

  phpunit:
    name: PHPUnit
    needs: [phpcs, phpmd]
    runs-on: ubuntu-16.04
    timeout-minutes: 10
    services:
      mysql:
        image: mysql
        ports:
          - 3306
    strategy:
      matrix:
        php: ['7.0', '7.3', '5.6']
        WP_VERSION: ['latest']
        WP_MULTISITE: ['0', '1']
        include:
          - php: '7.3'
            WP_VERSION: 'latest'
            WP_MULTISITE: '1'
            ACTIVATE_POPULAR_PLUGINS: 1
    steps:
      - name: Set running flag
        run: echo "::set-env name=RUNNING::1"
      - uses: actions/checkout@v2
      - uses: technote-space/get-git-comment-action@v1
      - uses: technote-space/get-diff-action@v2
        with:
          PREFIX_FILTER: |
            configs/
            src/
            tests/
          SUFFIX_FILTER: .php
          FILES: composer.lock
        if: "! contains(env.COMMIT_MESSAGE, '[skip ci]') && ! contains(env.COMMIT_MESSAGE, '[ci skip]')"
      - name: Set running flag
        run: echo "::set-env name=RUNNING::"
        if: "! env.GIT_DIFF"
      - name: Set running flag
        if: "matrix.ACTIVATE_POPULAR_PLUGINS == 1 && ! startsWith(github.ref, 'refs/tags/') && github.event.base_ref == format('refs/heads/{0}', github.event.repository.default_branch)"
        run: echo "::set-env name=RUNNING::1"
      - name: Set running flag
        if: matrix.ACTIVATE_POPULAR_PLUGINS == 1 && startsWith(github.ref, 'refs/tags/v')
        run: echo "::set-env name=RUNNING::1"
      - name: Set running flag
        run: |
          if [[ ! -f composer.json ]] || ! < composer.json jq -r '.scripts | keys[]' | grep -qe '^phpunit$'; then
            echo "::set-env name=RUNNING::"
          fi

      - name: Switch PHP version
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          coverage: xdebug
        if: env.RUNNING
      - name: Get Composer Cache Directory
        id: composer-cache
        run: |
          echo "::set-output name=dir::$(composer config cache-files-dir)"
        if: env.RUNNING
      - uses: actions/cache@v1
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-
        if: env.RUNNING
      - uses: actions/cache@v1
        with:
          path: .plugin
          key: plugin-cache-${{ github.run_id }}
          restore-keys: |
            plugin-cache-
        if: env.RUNNING && matrix.ACTIVATE_POPULAR_PLUGINS == 1
      - name: Prepare setting
        run: git clone --depth=1 https://github.com/wp-content-framework/travis-ci.git travis-ci && bash travis-ci/bin/prepare.sh
        env:
          WP_VERSION: ${{ matrix.WP_VERSION }}
          WP_MULTISITE: ${{ matrix.WP_MULTISITE }}
          ACTIVATE_POPULAR_PLUGINS: ${{ matrix.ACTIVATE_POPULAR_PLUGINS }}
        if: env.RUNNING
      - run: sudo systemctl start mysql
        if: env.RUNNING
      - name: Run tests
        run: bash travis-ci/bin/php/wp-test.sh
        env:
          DB_PASS: root
          WP_VERSION: ${{ matrix.WP_VERSION }}
          WP_MULTISITE: ${{ matrix.WP_MULTISITE }}
          ACTIVATE_POPULAR_PLUGINS: ${{ matrix.ACTIVATE_POPULAR_PLUGINS }}
        if: env.RUNNING
      - name: Codecov
        run: |
          if [ -n "$CODECOV_TOKEN" ]; then
            curl -s https://codecov.io/bash | bash -s -- -t $CODECOV_TOKEN -f $COVERAGE_FILE
          fi
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
          COVERAGE_FILE: ./coverage/clover.xml
        if: env.RUNNING && matrix.ACTIVATE_POPULAR_PLUGINS == 1

  pages:
    name: Publish GitHub Pages
    needs: [cover, phpunit]
    runs-on: ubuntu-latest
    timeout-minutes: 10
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Set running flag
        run: echo "::set-env name=RUNNING::1"
      - uses: actions/checkout@v2
        with:
          persist-credentials: false
      - name: Set running flag
        run: |
          if [[ ! -f composer.json ]] || [[ ! -d bin/gh-pages ]]; then
            echo "::set-env name=RUNNING::"
          fi

      - uses: technote-space/load-config-action@v1
        with:
          CONFIG_FILENAME: gh-pages.json
        if: env.RUNNING
      - name: Get Yarn Cache Directory
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"
        if: env.RUNNING
      - name: Cache node dependencies
        uses: actions/cache@v1
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
        if: env.RUNNING
      - name: Build
        run: |
          git clone --depth=1 https://github.com/wp-content-framework/travis-ci.git travis-ci
          bash travis-ci/bin/deploy/gh-pages.sh
        if: env.RUNNING
      - name: Deploy
        uses: JamesIves/github-pages-deploy-action@releases/v3
        with:
          ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
          BRANCH: gh-pages
          FOLDER: gh-pages
        if: env.RUNNING

  releases:
    name: Upload build files
    needs: [cover, phpunit]
    runs-on: ubuntu-16.04
    timeout-minutes: 5
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - uses: actions/checkout@v2
      - name: Switch PHP version
        uses: shivammathur/setup-php@v2
        with:
          php-version: '5.6'
          coverage: xdebug
      - name: Get Composer Cache Directory
        id: composer-cache
        run: |
          echo "::set-output name=dir::$(composer config cache-files-dir)"
      - uses: actions/cache@v1
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-
      - name: Prepare setting
        run: git clone --depth=1 https://github.com/wp-content-framework/travis-ci.git travis-ci && bash travis-ci/bin/prepare.sh
      - name: Build
        run: source travis-ci/bin/deploy/env.sh && bash travis-ci/bin/deploy/create.sh
      - name: Upload
        uses: technote-space/action-gh-release@v2
        with:
          files: release.zip
          draft: true

  publishRelease:
    name: Create Release
    needs: [pages, releases]
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: Get version
        run: echo "::set-env name=TAG_NAME::${HEAD_REF#refs/tags/}"
        env:
          HEAD_REF: ${{ github.ref }}
      - name: Create Release
        id: drafter
        uses: technote-space/release-drafter@v6
        with:
          GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}
          DRAFT: false
          NAME: ${{ env.TAG_NAME }}
          TAG: ${{ env.TAG_NAME }}
      - uses: 8398a7/action-slack@v2
        with:
          status: ${{ job.status }}
          text: ${{ format('<{0}>', steps.drafter.outputs.html_url) }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        if: success() && env.SLACK_WEBHOOK_URL

  slack:
    name: Slack
    needs: publishRelease
    runs-on: ubuntu-latest
    timeout-minutes: 3
    if: always()
    steps:
      - uses: technote-space/workflow-conclusion-action@v1
      - uses: 8398a7/action-slack@v2
        with:
          status: failure
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        if: env.WORKFLOW_CONCLUSION == 'failure' && env.SLACK_WEBHOOK_URL
